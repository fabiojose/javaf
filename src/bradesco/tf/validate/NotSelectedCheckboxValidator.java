//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.08.15 at 09:18:59 AM BRT 
//


package bradesco.tf.validate;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import bradesco.tf.TFConstants.VALIDATION;

import com.javaf.Constants.I18N;
import com.javaf.Constants.INTEGER;
import com.javaf.Constants.STRING;
import com.javaf.model.ValuePlace;

/**
 * <p>Java class for NotSelectedCheckboxValidator complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="NotSelectedCheckboxValidator">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.bradesco.com.br/firp}Validator">
 *       &lt;sequence>
 *         &lt;element name="value-place" type="{http://www.bradesco.com.br/firp}ConfigurePlace" maxOccurs="unbounded"/>
 *         &lt;element name="check-policy">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="AOMENOS_UM"/>
 *               &lt;enumeration value="TODOS"/>
 *               &lt;enumeration value="GRUPO"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="check-length" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}int">
 *               &lt;minInclusive value="1"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "NotSelectedCheckboxValidator", propOrder = {
    "valuePlace",
    "checkPolicy",
    "checkLength"
})
public class NotSelectedCheckboxValidator
    extends Validator implements IValidator
{

	@XmlElement(name = "value-place", required = true, type = ConfigurePlace.class)
    protected List<ValuePlace<Boolean>> valuePlace;
    @XmlElement(name = "check-policy", required = true)
    protected String checkPolicy;
    @XmlElement(name = "check-length")
    protected Integer checkLength;

    /**
     * Gets the value of the valuePlace property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the valuePlace property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getValuePlace().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConfigurePlace }
     * 
     * 
     */
    public List<ValuePlace<Boolean>> getValuePlace() {
        if (valuePlace == null) {
            valuePlace = new ArrayList<ValuePlace<Boolean>>();
        }
        return this.valuePlace;
    }
    
    public void setValuePlace(final List<ValuePlace<Boolean>> valuePlace){
    	this.valuePlace = valuePlace;
    }

    /**
     * Gets the value of the checkPolicy property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCheckPolicy() {
        return checkPolicy;
    }

    /**
     * Sets the value of the checkPolicy property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCheckPolicy(String value) {
        this.checkPolicy = value;
    }

    /**
     * Gets the value of the checkLength property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getCheckLength() {
        return checkLength;
    }

    /**
     * Sets the value of the checkLength property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setCheckLength(Integer value) {
        this.checkLength = value;
    }

	public boolean validate(List<String> messages) {

		boolean _result = Boolean.TRUE;
		
		final List<String> _messages = new ArrayList<String>();
		
		int _counter = INTEGER._0;
		for(ValuePlace<Boolean> _vp : getValuePlace()){
			if( !_vp.getValue()){
				_messages.add(helper.onInvalid(this, localization.localize(I18N.SELECIONE_A_CHECAGEM ,_vp.getLabel())));
				
				helper.onInvalid(this, _vp);
				
			} else {
				
				_counter++;
				
			}
		}
			
		if(!uformat.isDefault(getCheckPolicy())){
			final String _policy = getCheckPolicy();
				
			if(VALIDATION.CHECK_POLICY_AOMENOS_UM.equals(_policy) && _counter <= INTEGER._0){
				_messages.clear();
				_messages.add(localization.localize(I18N.SELECIONE_AO_MENOS_X_CHECAGENS, getCheckLength()));
				
			} else if(VALIDATION.CHECK_POLICY_GRUPO.equals(_policy) && _counter != getCheckLength()){
				_messages.clear();
				_messages.add(localization.localize(I18N.SELECIONE_EXATAMENTE_X_CHECAGENS, getCheckLength(), _counter));
			} else {
				
				_messages.clear();
			}
		}
		
		if(!_messages.isEmpty()){
			final String _message = uformat.toString(getMessage());
			if( !STRING.EMPTY.equals(_message)){
				_messages.clear();
				_messages.add(_message);
			}
			
			messages.addAll(_messages);
			_result = Boolean.FALSE; 
		}
		
		return _result;
	}

}
